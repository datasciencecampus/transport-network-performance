# This workflow will install Python dependencies, run tests and lint with Python 3.9
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
  pull_request:
    branches: [ "dev", "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
        os: ["macos-latest", "ubuntu-latest"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
    - name: Check Java Install
      run: |
        java --version
    - name: Install mac depencies with brew
      if: runner.os == 'macOS'  # not updating brew version, issue with aom
      run: |
        brew install geos
        brew install osmosis
      shell: sh
    - name: Install linux depencies with apt
      if: runner.os == 'Linux'
      run: |
        sudo apt update
        sudo apt install -y libgeos-dev
        sudo apt install -y osmosis
      shell: sh
    - name: Run Integration Tests
      run: |
          pytest -m runinteg --ignore tests/analyse_network  # run only those tests marked runinteg
    - name: pre-commit
      run: |
        pre-commit install
        pre-commit run --all-files
    - name: Test with pytest
      run: |
        pytest
    - name: Generate Report
      if: runner.os == 'macOS'  # run coverage report only on macOS
      run: |
        coverage run -m pytest
        coverage xml
    - name: Upload coverage reports to Codecov
      if: runner.os == 'macOS'  # run coverage report only on macOS
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        verbose: true
        token: ${{secrets.CODECOV_TOKEN}}
