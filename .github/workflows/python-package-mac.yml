# This workflow will install Python dependencies, pre-commit checks, run tests and generate Coverage report
# Not caching pip dependencies in this runner to catch breaking changes in unpinned dependencies
# Fixing OS version to avoid breaking OS changes during development stage.
# Will open up OS versions before release.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: MacOS Full Test Suite and Coverage

on:
  push:
  pull_request:
    branches: [ "dev", "main" ]

jobs:
  build:
    name: Full & Coverage
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
        os: ["macos-12"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11.0.21'
    - name: Check Java Install
      run: |
        java --version
    - name: Install mac depencies with brew  # not updating brew version, issue with aom
      run: |
        curl https://raw.githubusercontent.com/Homebrew/homebrew-core/fd6a21cdb2c56d44509f7459c3feadfe3931ee27/Formula/g/geos.rb > geos.rb
        brew install --build-from-source ./geos.rb
        brew info geos
        curl https://raw.githubusercontent.com/Homebrew/homebrew-core/fc3b38db25493e08020dd2479a94061636edcad4/Formula/osmosis.rb > osmosis.rb
        brew install --build-from-source ./osmosis.rb
        brew info osmosis
      shell: sh
    - name: pre-commit
      run: |
        pre-commit install
        pre-commit run --all-files
    - name: Run Tests and Generate Coverage Report
      run: |
        coverage run -m pytest
        coverage xml
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        verbose: true
        token: ${{secrets.CODECOV_TOKEN}}
